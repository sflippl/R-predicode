# Generated by roxygen2: do not edit by hand

S3method(analyse,minimal_implementation)
S3method(derivatives,architecture)
S3method(derivatives,hpc)
S3method(dim,minimal_fnn)
S3method(dim,minimal_task)
S3method(input,minimal_task)
S3method(layers,architecture)
S3method(layers,hpc)
S3method(layers,implementation)
S3method(output,minimal_task)
S3method(parameter_step,minimal_implementation)
S3method(print,layered_architecture)
S3method(print,linear_layered_architecture)
S3method(print,minimal_fnn)
S3method(print,minimal_task)
S3method(print,stopping_rule)
S3method(signal_step,minimal_implementation)
S3method(simulate,minimal_implementation)
S3method(transformations,architecture)
S3method(transformations,hpc)
S3method(weights,minimal_task)
export(.minimal_fnn_gd_step)
export(analyse)
export(architecture_depth)
export(derivatives)
export(error_weights)
export(explicit_estimation)
export(explicit_inference)
export(generate_parameters)
export(generate_signals)
export(hpc)
export(hpc_architecture)
export(hpc_input)
export(implement_minimal)
export(implementation_hpc)
export(infer_signals)
export(initialize_parameters)
export(initialize_signals)
export(input)
export(is_architecture)
export(is_hpc)
export(is_minimal_fnn)
export(is_minimal_task)
export(is_stopping_rule)
export(layer_derivative)
export(layer_size)
export(layer_transformation)
export(layered_architecture)
export(layers)
export(max_iterations)
export(minimal_fnn)
export(minimal_fnn_gd)
export(minimal_task)
export(n_samples)
export(output)
export(parameter_step)
export(signal_step)
export(simulate)
export(stopping_distance)
export(stopping_rule)
export(theta_0)
export(theta_1)
export(transformations)
importFrom(magrittr,"%>%")
importFrom(rlang,.data)
importFrom(stats,weights)
importFrom(zeallot,"%<-%")
